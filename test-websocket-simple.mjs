#!/usr/bin/env node

/**
 * Test WebSocket Simple pour BantuDelice
 * Diagnostic du probl√®me de connexion
 */

import { io } from 'socket.io-client';

const BACKEND_URL = 'http://localhost:3001';

console.log('üîç Test WebSocket Simple BantuDelice');
console.log('=====================================');

// Test 1: V√©rifier que le serveur r√©pond
console.log('\n1. Test de connectivit√© HTTP...');
try {
  const response = await fetch(`${BACKEND_URL}/api/tracking/BD123456`);
  if (response.ok) {
    console.log('‚úÖ Serveur HTTP accessible');
  } else {
    console.log('‚ùå Serveur HTTP non accessible');
  }
} catch (error) {
  console.log('‚ùå Erreur HTTP:', error.message);
}

// Test 2: Test WebSocket simple
console.log('\n2. Test WebSocket...');
try {
  console.log('üì° Tentative de connexion WebSocket...');
  
  const socket = io(`${BACKEND_URL}/tracking`, {
    transports: ['websocket', 'polling'],
    timeout: 10000,
    forceNew: true
  });
  
  socket.on('connect', () => {
    console.log('‚úÖ WebSocket connect√©!');
    console.log('   Client ID:', socket.id);
    console.log('   Transport:', socket.io.engine.transport.name);
    
    // Test simple
    socket.emit('ping');
    
    socket.on('pong', (data) => {
      console.log('‚úÖ Pong re√ßu:', data);
      socket.disconnect();
    });
  });
  
  socket.on('connect_error', (error) => {
    console.log('‚ùå Erreur de connexion WebSocket:', error.message);
    console.log('   D√©tails:', error);
  });
  
  socket.on('disconnect', (reason) => {
    console.log('üì¥ WebSocket d√©connect√©:', reason);
  });
  
  // Timeout apr√®s 10 secondes
  setTimeout(() => {
    if (socket.connected) {
      console.log('‚è∞ Timeout - WebSocket toujours connect√©');
    } else {
      console.log('‚è∞ Timeout - WebSocket non connect√©');
    }
    socket.disconnect();
  }, 10000);
  
} catch (error) {
  console.log('‚ùå Erreur lors du test WebSocket:', error.message);
}

console.log('\nüîß Diagnostic:');
console.log('- V√©rifiez que le backend est d√©marr√© sur le port 3001');
console.log('- V√©rifiez que le TrackingGateway est charg√©');
console.log('- V√©rifiez les logs du serveur pour les erreurs WebSocket'); 