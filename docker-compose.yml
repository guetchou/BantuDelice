version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: bantudelice_postgres
    environment:
      POSTGRES_DB: bantudelice
      POSTGRES_USER: bantudelice
      POSTGRES_PASSWORD: bantudelice
    ports:
      - "1530:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - bantudelice_network

  redis:
    image: redis:7-alpine
    container_name: bantudelice_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bantudelice_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bantudelice_backend
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=bantudelice
      - DB_PASSWORD=bantudelice
      - DB_NAME=bantudelice
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=6fc5cdc107d6daa1d198a1cf02baa5d6d660d6c5802cc56ea704c72ce761aaeb627e1770da8a3b2bb6097378f12cdbba047be92c83b674cfaa831fd1dc9884d7
      - NODE_ENV=development
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    env_file:
      - .env
    volumes:
      - ./backend:/app
      - .docker_node_modules:/app/node_modules
    networks:
      - bantudelice_network
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  postgres_data:
  redis_data:
  .docker_node_modules:

networks:
  bantudelice_network:
    driver: bridge 