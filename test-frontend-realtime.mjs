#!/usr/bin/env node

const API_BASE = 'http://localhost:3001';
const TRACKING_NUMBER = 'BD101477';

// Route plus d√©taill√©e pour un test plus r√©aliste
const detailedRoute = [
  { lat: -4.2634, lng: 15.2429, desc: 'Brazzaville - D√©part' },
  { lat: -4.2600, lng: 15.2450, desc: 'Sortie de Brazzaville' },
  { lat: -4.2500, lng: 15.2500, desc: 'Route nationale' },
  { lat: -4.2400, lng: 15.2600, desc: 'En direction du sud' },
  { lat: -4.2300, lng: 15.2700, desc: 'Approche de la for√™t' },
  { lat: -4.2200, lng: 15.2800, desc: 'Travers√©e de la for√™t' },
  { lat: -4.2100, lng: 15.2900, desc: 'Sortie de la for√™t' },
  { lat: -4.2000, lng: 15.3000, desc: 'Mi-chemin' },
  { lat: -4.1900, lng: 15.3100, desc: 'Approche de la c√¥te' },
  { lat: -4.1800, lng: 15.3200, desc: 'Route c√¥ti√®re' },
  { lat: -4.1700, lng: 15.3300, desc: 'Approche Pointe-Noire' },
  { lat: -4.1600, lng: 15.3400, desc: 'Entr√©e Pointe-Noire' },
  { lat: -4.1500, lng: 15.3500, desc: 'Centre-ville Pointe-Noire' },
  { lat: -4.8167, lng: 11.8500, desc: 'Pointe-Noire - Arriv√©e' }
];

async function testFrontendRealtime() {
  console.log('üéØ TEST FRONTEND EN TEMPS R√âEL');
  console.log(`üì¶ Colis: ${TRACKING_NUMBER}`);
  console.log('üìç Simulation de livraison Brazzaville ‚Üí Pointe-Noire\n');

  try {
    // D√©marrer le tracking
    console.log('üöÄ D√©marrage du tracking...');
    const startResponse = await fetch(`${API_BASE}/tracking/start/${TRACKING_NUMBER}`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ driverId: 'driver-001' })
    });

    if (!startResponse.ok) {
      throw new Error('Erreur d√©marrage tracking');
    }

    console.log('‚úÖ Tracking d√©marr√©\n');

    // Simuler le d√©placement d√©taill√©
    for (let i = 0; i < detailedRoute.length; i++) {
      const pos = detailedRoute[i];
      
      console.log(`üìç Position ${i + 1}/${detailedRoute.length}: ${pos.desc}`);
      console.log(`   Coordonn√©es: ${pos.lat}, ${pos.lng}`);
      
      // Envoyer la position GPS
      const locationResponse = await fetch(`${API_BASE}/tracking/${TRACKING_NUMBER}/location`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          latitude: pos.lat,
          longitude: pos.lng,
          accuracy: 5 + Math.random() * 10,
          speed: 25 + Math.random() * 30,
          heading: 90 + Math.random() * 180,
          altitude: 300 + Math.random() * 100
        })
      });

      if (locationResponse.ok) {
        const result = await locationResponse.json();
        console.log(`   ‚úÖ Position mise √† jour: ${result.data.timestamp}`);
        
        // V√©rifier les informations de tracking
        const trackingResponse = await fetch(`${API_BASE}/tracking/${TRACKING_NUMBER}`);
        if (trackingResponse.ok) {
          const trackingData = await trackingResponse.json();
          console.log(`   üìä Statut: ${trackingData.data.status}`);
          console.log(`   üéØ Position actuelle: ${trackingData.data.currentLocation.latitude}, ${trackingData.data.currentLocation.longitude}`);
        }
      } else {
        console.log(`   ‚ùå Erreur mise √† jour position`);
      }

      // Attendre 2 secondes entre chaque position
      console.log(`   ‚è≥ Attente 2 secondes...\n`);
      await new Promise(resolve => setTimeout(resolve, 2000));
    }

    console.log('üéâ Test termin√© !');
    console.log('\nüìã INSTRUCTIONS POUR LE TEST FRONTEND:');
    console.log('1. Ouvrez votre navigateur sur: http://localhost:9595');
    console.log('2. Allez sur la page de tracking des colis');
    console.log('3. Entrez le num√©ro de tracking: BD101477');
    console.log('4. Cliquez sur "Rechercher"');
    console.log('5. Activez le tracking en temps r√©el');
    console.log('6. Observez le marqueur se d√©placer sur la carte !');
    console.log('\nüîó URL directe: http://localhost:9595/colis/tracking?code=BD101477');

  } catch (error) {
    console.error('‚ùå Erreur:', error.message);
  }
}

// Lancer le test
testFrontendRealtime(); 